{"version":3,"file":"intlify.YRk98uu_.js","sources":["../../../kongniao-project/node_modules/.pnpm/@intlify+shared@9.13.1/node_modules/@intlify/shared/dist/shared.mjs","../../../kongniao-project/node_modules/.pnpm/@intlify+message-compiler@9.13.1/node_modules/@intlify/message-compiler/dist/message-compiler.esm-browser.js","../../../kongniao-project/node_modules/.pnpm/@intlify+core-base@9.13.1/node_modules/@intlify/core-base/dist/core-base.mjs"],"sourcesContent":["/*!\n  * shared v9.13.1\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\n/**\n * Original Utilities\n * written by kazuya kawaguchi\n */\nconst inBrowser = typeof window !== 'undefined';\nlet mark;\nlet measure;\nif ((process.env.NODE_ENV !== 'production')) {\n    const perf = inBrowser && window.performance;\n    if (perf &&\n        perf.mark &&\n        perf.measure &&\n        perf.clearMarks &&\n        // @ts-ignore browser compat\n        perf.clearMeasures) {\n        mark = (tag) => {\n            perf.mark(tag);\n        };\n        measure = (name, startTag, endTag) => {\n            perf.measure(name, startTag, endTag);\n            perf.clearMarks(startTag);\n            perf.clearMarks(endTag);\n        };\n    }\n}\nconst RE_ARGS = /\\{([0-9a-zA-Z]+)\\}/g;\n/* eslint-disable */\nfunction format(message, ...args) {\n    if (args.length === 1 && isObject(args[0])) {\n        args = args[0];\n    }\n    if (!args || !args.hasOwnProperty) {\n        args = {};\n    }\n    return message.replace(RE_ARGS, (match, identifier) => {\n        return args.hasOwnProperty(identifier) ? args[identifier] : '';\n    });\n}\nconst makeSymbol = (name, shareable = false) => !shareable ? Symbol(name) : Symbol.for(name);\nconst generateFormatCacheKey = (locale, key, source) => friendlyJSONstringify({ l: locale, k: key, s: source });\nconst friendlyJSONstringify = (json) => JSON.stringify(json)\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n    .replace(/\\u0027/g, '\\\\u0027');\nconst isNumber = (val) => typeof val === 'number' && isFinite(val);\nconst isDate = (val) => toTypeString(val) === '[object Date]';\nconst isRegExp = (val) => toTypeString(val) === '[object RegExp]';\nconst isEmptyObject = (val) => isPlainObject(val) && Object.keys(val).length === 0;\nconst assign = Object.assign;\nlet _globalThis;\nconst getGlobalThis = () => {\n    // prettier-ignore\n    return (_globalThis ||\n        (_globalThis =\n            typeof globalThis !== 'undefined'\n                ? globalThis\n                : typeof self !== 'undefined'\n                    ? self\n                    : typeof window !== 'undefined'\n                        ? window\n                        : typeof global !== 'undefined'\n                            ? global\n                            : {}));\n};\nfunction escapeHtml(rawText) {\n    return rawText\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n}\n/* eslint-enable */\n/**\n * Useful Utilities By Evan you\n * Modified by kazuya kawaguchi\n * MIT License\n * https://github.com/vuejs/vue-next/blob/master/packages/shared/src/index.ts\n * https://github.com/vuejs/vue-next/blob/master/packages/shared/src/codeframe.ts\n */\nconst isArray = Array.isArray;\nconst isFunction = (val) => typeof val === 'function';\nconst isString = (val) => typeof val === 'string';\nconst isBoolean = (val) => typeof val === 'boolean';\nconst isSymbol = (val) => typeof val === 'symbol';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (val) => val !== null && typeof val === 'object';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isPromise = (val) => {\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst isPlainObject = (val) => {\n    if (!isObject(val))\n        return false;\n    const proto = Object.getPrototypeOf(val);\n    return proto === null || proto.constructor === Object;\n};\n// for converting list and named values to displayed strings.\nconst toDisplayString = (val) => {\n    return val == null\n        ? ''\n        : isArray(val) || (isPlainObject(val) && val.toString === objectToString)\n            ? JSON.stringify(val, null, 2)\n            : String(val);\n};\nfunction join(items, separator = '') {\n    return items.reduce((str, item, index) => (index === 0 ? str + item : str + separator + item), '');\n}\nconst RANGE = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n    const lines = source.split(/\\r?\\n/);\n    let count = 0;\n    const res = [];\n    for (let i = 0; i < lines.length; i++) {\n        count += lines[i].length + 1;\n        if (count >= start) {\n            for (let j = i - RANGE; j <= i + RANGE || end > count; j++) {\n                if (j < 0 || j >= lines.length)\n                    continue;\n                const line = j + 1;\n                res.push(`${line}${' '.repeat(3 - String(line).length)}|  ${lines[j]}`);\n                const lineLength = lines[j].length;\n                if (j === i) {\n                    // push underline\n                    const pad = start - (count - lineLength) + 1;\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\n                }\n                else if (j > i) {\n                    if (end > count) {\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\n                        res.push(`   |  ` + '^'.repeat(length));\n                    }\n                    count += lineLength + 1;\n                }\n            }\n            break;\n        }\n    }\n    return res.join('\\n');\n}\nfunction incrementer(code) {\n    let current = code;\n    return () => ++current;\n}\n\nfunction warn(msg, err) {\n    if (typeof console !== 'undefined') {\n        console.warn(`[intlify] ` + msg);\n        /* istanbul ignore if */\n        if (err) {\n            console.warn(err.stack);\n        }\n    }\n}\nconst hasWarned = {};\nfunction warnOnce(msg) {\n    if (!hasWarned[msg]) {\n        hasWarned[msg] = true;\n        warn(msg);\n    }\n}\n\n/**\n * Event emitter, forked from the below:\n * - original repository url: https://github.com/developit/mitt\n * - code url: https://github.com/developit/mitt/blob/master/src/index.ts\n * - author: Jason Miller (https://github.com/developit)\n * - license: MIT\n */\n/**\n * Create a event emitter\n *\n * @returns An event emitter\n */\nfunction createEmitter() {\n    const events = new Map();\n    const emitter = {\n        events,\n        on(event, handler) {\n            const handlers = events.get(event);\n            const added = handlers && handlers.push(handler);\n            if (!added) {\n                events.set(event, [handler]);\n            }\n        },\n        off(event, handler) {\n            const handlers = events.get(event);\n            if (handlers) {\n                handlers.splice(handlers.indexOf(handler) >>> 0, 1);\n            }\n        },\n        emit(event, payload) {\n            (events.get(event) || [])\n                .slice()\n                .map(handler => handler(payload));\n            (events.get('*') || [])\n                .slice()\n                .map(handler => handler(event, payload));\n        }\n    };\n    return emitter;\n}\n\nconst isNotObjectOrIsArray = (val) => !isObject(val) || isArray(val);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction deepCopy(src, des) {\n    // src and des should both be objects, and none of them can be a array\n    if (isNotObjectOrIsArray(src) || isNotObjectOrIsArray(des)) {\n        throw new Error('Invalid value');\n    }\n    const stack = [{ src, des }];\n    while (stack.length) {\n        const { src, des } = stack.pop();\n        Object.keys(src).forEach(key => {\n            if (isNotObjectOrIsArray(src[key]) || isNotObjectOrIsArray(des[key])) {\n                // replace with src[key] when:\n                // src[key] or des[key] is not an object, or\n                // src[key] or des[key] is an array\n                des[key] = src[key];\n            }\n            else {\n                // src[key] and des[key] are both objects, merge them\n                stack.push({ src: src[key], des: des[key] });\n            }\n        });\n    }\n}\n\nexport { assign, createEmitter, deepCopy, escapeHtml, format, friendlyJSONstringify, generateCodeFrame, generateFormatCacheKey, getGlobalThis, hasOwn, inBrowser, incrementer, isArray, isBoolean, isDate, isEmptyObject, isFunction, isNumber, isObject, isPlainObject, isPromise, isRegExp, isString, isSymbol, join, makeSymbol, mark, measure, objectToString, toDisplayString, toTypeString, warn, warnOnce };\n","/*!\n  * message-compiler v9.13.1\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nconst LOCATION_STUB = {\n    start: { line: 1, column: 1, offset: 0 },\n    end: { line: 1, column: 1, offset: 0 }\n};\nfunction createPosition(line, column, offset) {\n    return { line, column, offset };\n}\nfunction createLocation(start, end, source) {\n    const loc = { start, end };\n    if (source != null) {\n        loc.source = source;\n    }\n    return loc;\n}\n\n/**\n * Original Utilities\n * written by kazuya kawaguchi\n */\nconst RE_ARGS = /\\{([0-9a-zA-Z]+)\\}/g;\n/* eslint-disable */\nfunction format(message, ...args) {\n    if (args.length === 1 && isObject(args[0])) {\n        args = args[0];\n    }\n    if (!args || !args.hasOwnProperty) {\n        args = {};\n    }\n    return message.replace(RE_ARGS, (match, identifier) => {\n        return args.hasOwnProperty(identifier) ? args[identifier] : '';\n    });\n}\nconst assign = Object.assign;\nconst isString = (val) => typeof val === 'string';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (val) => val !== null && typeof val === 'object';\nfunction join(items, separator = '') {\n    return items.reduce((str, item, index) => (index === 0 ? str + item : str + separator + item), '');\n}\n\nconst CompileWarnCodes = {\n    USE_MODULO_SYNTAX: 1,\n    __EXTEND_POINT__: 2\n};\n/** @internal */\nconst warnMessages = {\n    [CompileWarnCodes.USE_MODULO_SYNTAX]: `Use modulo before '{{0}}'.`\n};\nfunction createCompileWarn(code, loc, ...args) {\n    const msg = format(warnMessages[code] || '', ...(args || [])) ;\n    const message = { message: String(msg), code };\n    if (loc) {\n        message.location = loc;\n    }\n    return message;\n}\n\nconst CompileErrorCodes = {\n    // tokenizer error codes\n    EXPECTED_TOKEN: 1,\n    INVALID_TOKEN_IN_PLACEHOLDER: 2,\n    UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,\n    UNKNOWN_ESCAPE_SEQUENCE: 4,\n    INVALID_UNICODE_ESCAPE_SEQUENCE: 5,\n    UNBALANCED_CLOSING_BRACE: 6,\n    UNTERMINATED_CLOSING_BRACE: 7,\n    EMPTY_PLACEHOLDER: 8,\n    NOT_ALLOW_NEST_PLACEHOLDER: 9,\n    INVALID_LINKED_FORMAT: 10,\n    // parser error codes\n    MUST_HAVE_MESSAGES_IN_PLURAL: 11,\n    UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,\n    UNEXPECTED_EMPTY_LINKED_KEY: 13,\n    UNEXPECTED_LEXICAL_ANALYSIS: 14,\n    // generator error codes\n    UNHANDLED_CODEGEN_NODE_TYPE: 15,\n    // minifier error codes\n    UNHANDLED_MINIFIER_NODE_TYPE: 16,\n    // Special value for higher-order compilers to pick up the last code\n    // to avoid collision of error codes. This should always be kept as the last\n    // item.\n    __EXTEND_POINT__: 17\n};\n/** @internal */\nconst errorMessages = {\n    // tokenizer error messages\n    [CompileErrorCodes.EXPECTED_TOKEN]: `Expected token: '{0}'`,\n    [CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER]: `Invalid token in placeholder: '{0}'`,\n    [CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: `Unterminated single quote in placeholder`,\n    [CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE]: `Unknown escape sequence: \\\\{0}`,\n    [CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE]: `Invalid unicode escape sequence: {0}`,\n    [CompileErrorCodes.UNBALANCED_CLOSING_BRACE]: `Unbalanced closing brace`,\n    [CompileErrorCodes.UNTERMINATED_CLOSING_BRACE]: `Unterminated closing brace`,\n    [CompileErrorCodes.EMPTY_PLACEHOLDER]: `Empty placeholder`,\n    [CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER]: `Not allowed nest placeholder`,\n    [CompileErrorCodes.INVALID_LINKED_FORMAT]: `Invalid linked format`,\n    // parser error messages\n    [CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL]: `Plural must have messages`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER]: `Unexpected empty linked modifier`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY]: `Unexpected empty linked key`,\n    [CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS]: `Unexpected lexical analysis in token: '{0}'`,\n    // generator error messages\n    [CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE]: `unhandled codegen node type: '{0}'`,\n    // minimizer error messages\n    [CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE]: `unhandled mimifier node type: '{0}'`\n};\nfunction createCompileError(code, loc, options = {}) {\n    const { domain, messages, args } = options;\n    const msg = format((messages || errorMessages)[code] || '', ...(args || []))\n        ;\n    const error = new SyntaxError(String(msg));\n    error.code = code;\n    if (loc) {\n        error.location = loc;\n    }\n    error.domain = domain;\n    return error;\n}\n/** @internal */\nfunction defaultOnError(error) {\n    throw error;\n}\n\n// eslint-disable-next-line no-useless-escape\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nconst detectHtmlTag = (source) => RE_HTML_TAG.test(source);\n\nconst CHAR_SP = ' ';\nconst CHAR_CR = '\\r';\nconst CHAR_LF = '\\n';\nconst CHAR_LS = String.fromCharCode(0x2028);\nconst CHAR_PS = String.fromCharCode(0x2029);\nfunction createScanner(str) {\n    const _buf = str;\n    let _index = 0;\n    let _line = 1;\n    let _column = 1;\n    let _peekOffset = 0;\n    const isCRLF = (index) => _buf[index] === CHAR_CR && _buf[index + 1] === CHAR_LF;\n    const isLF = (index) => _buf[index] === CHAR_LF;\n    const isPS = (index) => _buf[index] === CHAR_PS;\n    const isLS = (index) => _buf[index] === CHAR_LS;\n    const isLineEnd = (index) => isCRLF(index) || isLF(index) || isPS(index) || isLS(index);\n    const index = () => _index;\n    const line = () => _line;\n    const column = () => _column;\n    const peekOffset = () => _peekOffset;\n    const charAt = (offset) => isCRLF(offset) || isPS(offset) || isLS(offset) ? CHAR_LF : _buf[offset];\n    const currentChar = () => charAt(_index);\n    const currentPeek = () => charAt(_index + _peekOffset);\n    function next() {\n        _peekOffset = 0;\n        if (isLineEnd(_index)) {\n            _line++;\n            _column = 0;\n        }\n        if (isCRLF(_index)) {\n            _index++;\n        }\n        _index++;\n        _column++;\n        return _buf[_index];\n    }\n    function peek() {\n        if (isCRLF(_index + _peekOffset)) {\n            _peekOffset++;\n        }\n        _peekOffset++;\n        return _buf[_index + _peekOffset];\n    }\n    function reset() {\n        _index = 0;\n        _line = 1;\n        _column = 1;\n        _peekOffset = 0;\n    }\n    function resetPeek(offset = 0) {\n        _peekOffset = offset;\n    }\n    function skipToPeek() {\n        const target = _index + _peekOffset;\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (target !== _index) {\n            next();\n        }\n        _peekOffset = 0;\n    }\n    return {\n        index,\n        line,\n        column,\n        peekOffset,\n        charAt,\n        currentChar,\n        currentPeek,\n        next,\n        peek,\n        reset,\n        resetPeek,\n        skipToPeek\n    };\n}\n\nconst EOF = undefined;\nconst DOT = '.';\nconst LITERAL_DELIMITER = \"'\";\nconst ERROR_DOMAIN$3 = 'tokenizer';\nfunction createTokenizer(source, options = {}) {\n    const location = options.location !== false;\n    const _scnr = createScanner(source);\n    const currentOffset = () => _scnr.index();\n    const currentPosition = () => createPosition(_scnr.line(), _scnr.column(), _scnr.index());\n    const _initLoc = currentPosition();\n    const _initOffset = currentOffset();\n    const _context = {\n        currentType: 14 /* TokenTypes.EOF */,\n        offset: _initOffset,\n        startLoc: _initLoc,\n        endLoc: _initLoc,\n        lastType: 14 /* TokenTypes.EOF */,\n        lastOffset: _initOffset,\n        lastStartLoc: _initLoc,\n        lastEndLoc: _initLoc,\n        braceNest: 0,\n        inLinked: false,\n        text: ''\n    };\n    const context = () => _context;\n    const { onError } = options;\n    function emitError(code, pos, offset, ...args) {\n        const ctx = context();\n        pos.column += offset;\n        pos.offset += offset;\n        if (onError) {\n            const loc = location ? createLocation(ctx.startLoc, pos) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$3,\n                args\n            });\n            onError(err);\n        }\n    }\n    function getToken(context, type, value) {\n        context.endLoc = currentPosition();\n        context.currentType = type;\n        const token = { type };\n        if (location) {\n            token.loc = createLocation(context.startLoc, context.endLoc);\n        }\n        if (value != null) {\n            token.value = value;\n        }\n        return token;\n    }\n    const getEndToken = (context) => getToken(context, 14 /* TokenTypes.EOF */);\n    function eat(scnr, ch) {\n        if (scnr.currentChar() === ch) {\n            scnr.next();\n            return ch;\n        }\n        else {\n            emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);\n            return '';\n        }\n    }\n    function peekSpaces(scnr) {\n        let buf = '';\n        while (scnr.currentPeek() === CHAR_SP || scnr.currentPeek() === CHAR_LF) {\n            buf += scnr.currentPeek();\n            scnr.peek();\n        }\n        return buf;\n    }\n    function skipSpaces(scnr) {\n        const buf = peekSpaces(scnr);\n        scnr.skipToPeek();\n        return buf;\n    }\n    function isIdentifierStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            cc === 95 // _\n        );\n    }\n    function isNumberStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function isNamedIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isListIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ch = scnr.currentPeek() === '-' ? scnr.peek() : scnr.currentPeek();\n        const ret = isNumberStart(ch);\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLiteralStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === LITERAL_DELIMITER;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDotStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 8 /* TokenTypes.LinkedAlias */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \".\" /* TokenChars.LinkedDot */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedModifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 9 /* TokenTypes.LinkedDot */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDelimiterStart(scnr, context) {\n        const { currentType } = context;\n        if (!(currentType === 8 /* TokenTypes.LinkedAlias */ ||\n            currentType === 12 /* TokenTypes.LinkedModifier */)) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \":\" /* TokenChars.LinkedDelimiter */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedReferStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 10 /* TokenTypes.LinkedDelimiter */) {\n            return false;\n        }\n        const fn = () => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return isIdentifierStart(scnr.peek());\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"%\" /* TokenChars.Modulo */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \":\" /* TokenChars.LinkedDelimiter */ ||\n                ch === \".\" /* TokenChars.LinkedDot */ ||\n                ch === CHAR_SP ||\n                !ch) {\n                return false;\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn();\n            }\n            else {\n                // other characters\n                return isTextStart(scnr, false);\n            }\n        };\n        const ret = fn();\n        scnr.resetPeek();\n        return ret;\n    }\n    function isPluralStart(scnr) {\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \"|\" /* TokenChars.Pipe */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function detectModuloStart(scnr) {\n        const spaces = peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \"%\" /* TokenChars.Modulo */ &&\n            scnr.peek() === \"{\" /* TokenChars.BraceLeft */;\n        scnr.resetPeek();\n        return {\n            isModulo: ret,\n            hasSpace: spaces.length > 0\n        };\n    }\n    function isTextStart(scnr, reset = true) {\n        const fn = (hasSpace = false, prev = '', detectModulo = false) => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return prev === \"%\" /* TokenChars.Modulo */ ? false : hasSpace;\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ || !ch) {\n                return prev === \"%\" /* TokenChars.Modulo */ ? true : hasSpace;\n            }\n            else if (ch === \"%\" /* TokenChars.Modulo */) {\n                scnr.peek();\n                return fn(hasSpace, \"%\" /* TokenChars.Modulo */, true);\n            }\n            else if (ch === \"|\" /* TokenChars.Pipe */) {\n                return prev === \"%\" /* TokenChars.Modulo */ || detectModulo\n                    ? true\n                    : !(prev === CHAR_SP || prev === CHAR_LF);\n            }\n            else if (ch === CHAR_SP) {\n                scnr.peek();\n                return fn(true, CHAR_SP, detectModulo);\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn(true, CHAR_LF, detectModulo);\n            }\n            else {\n                return true;\n            }\n        };\n        const ret = fn();\n        reset && scnr.resetPeek();\n        return ret;\n    }\n    function takeChar(scnr, fn) {\n        const ch = scnr.currentChar();\n        if (ch === EOF) {\n            return EOF;\n        }\n        if (fn(ch)) {\n            scnr.next();\n            return ch;\n        }\n        return null;\n    }\n    function isIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 // $\n        );\n    }\n    function takeIdentifierChar(scnr) {\n        return takeChar(scnr, isIdentifier);\n    }\n    function isNamedIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 || // $\n            cc === 45 // -\n        );\n    }\n    function takeNamedIdentifierChar(scnr) {\n        return takeChar(scnr, isNamedIdentifier);\n    }\n    function isDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function takeDigit(scnr) {\n        return takeChar(scnr, isDigit);\n    }\n    function isHexDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 48 && cc <= 57) || // 0-9\n            (cc >= 65 && cc <= 70) || // A-F\n            (cc >= 97 && cc <= 102)); // a-f\n    }\n    function takeHexDigit(scnr) {\n        return takeChar(scnr, isHexDigit);\n    }\n    function getDigits(scnr) {\n        let ch = '';\n        let num = '';\n        while ((ch = takeDigit(scnr))) {\n            num += ch;\n        }\n        return num;\n    }\n    function readModulo(scnr) {\n        skipSpaces(scnr);\n        const ch = scnr.currentChar();\n        if (ch !== \"%\" /* TokenChars.Modulo */) {\n            emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);\n        }\n        scnr.next();\n        return \"%\" /* TokenChars.Modulo */;\n    }\n    function readText(scnr) {\n        let buf = '';\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"}\" /* TokenChars.BraceRight */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                !ch) {\n                break;\n            }\n            else if (ch === \"%\" /* TokenChars.Modulo */) {\n                if (isTextStart(scnr)) {\n                    buf += ch;\n                    scnr.next();\n                }\n                else {\n                    break;\n                }\n            }\n            else if (ch === CHAR_SP || ch === CHAR_LF) {\n                if (isTextStart(scnr)) {\n                    buf += ch;\n                    scnr.next();\n                }\n                else if (isPluralStart(scnr)) {\n                    break;\n                }\n                else {\n                    buf += ch;\n                    scnr.next();\n                }\n            }\n            else {\n                buf += ch;\n                scnr.next();\n            }\n        }\n        return buf;\n    }\n    function readNamedIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let name = '';\n        while ((ch = takeNamedIdentifierChar(scnr))) {\n            name += ch;\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return name;\n    }\n    function readListIdentifier(scnr) {\n        skipSpaces(scnr);\n        let value = '';\n        if (scnr.currentChar() === '-') {\n            scnr.next();\n            value += `-${getDigits(scnr)}`;\n        }\n        else {\n            value += getDigits(scnr);\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return value;\n    }\n    function isLiteral(ch) {\n        return ch !== LITERAL_DELIMITER && ch !== CHAR_LF;\n    }\n    function readLiteral(scnr) {\n        skipSpaces(scnr);\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        let ch = '';\n        let literal = '';\n        while ((ch = takeChar(scnr, isLiteral))) {\n            if (ch === '\\\\') {\n                literal += readEscapeSequence(scnr);\n            }\n            else {\n                literal += ch;\n            }\n        }\n        const current = scnr.currentChar();\n        if (current === CHAR_LF || current === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, currentPosition(), 0);\n            // TODO: Is it correct really?\n            if (current === CHAR_LF) {\n                scnr.next();\n                // eslint-disable-next-line no-useless-escape\n                eat(scnr, `\\'`);\n            }\n            return literal;\n        }\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        return literal;\n    }\n    function readEscapeSequence(scnr) {\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case '\\\\':\n            case `\\'`: // eslint-disable-line no-useless-escape\n                scnr.next();\n                return `\\\\${ch}`;\n            case 'u':\n                return readUnicodeEscapeSequence(scnr, ch, 4);\n            case 'U':\n                return readUnicodeEscapeSequence(scnr, ch, 6);\n            default:\n                emitError(CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE, currentPosition(), 0, ch);\n                return '';\n        }\n    }\n    function readUnicodeEscapeSequence(scnr, unicode, digits) {\n        eat(scnr, unicode);\n        let sequence = '';\n        for (let i = 0; i < digits; i++) {\n            const ch = takeHexDigit(scnr);\n            if (!ch) {\n                emitError(CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE, currentPosition(), 0, `\\\\${unicode}${sequence}${scnr.currentChar()}`);\n                break;\n            }\n            sequence += ch;\n        }\n        return `\\\\${unicode}${sequence}`;\n    }\n    function isInvalidIdentifier(ch) {\n        return (ch !== \"{\" /* TokenChars.BraceLeft */ &&\n            ch !== \"}\" /* TokenChars.BraceRight */ &&\n            ch !== CHAR_SP &&\n            ch !== CHAR_LF);\n    }\n    function readInvalidIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let identifiers = '';\n        while ((ch = takeChar(scnr, isInvalidIdentifier))) {\n            identifiers += ch;\n        }\n        return identifiers;\n    }\n    function readLinkedModifier(scnr) {\n        let ch = '';\n        let name = '';\n        while ((ch = takeIdentifierChar(scnr))) {\n            name += ch;\n        }\n        return name;\n    }\n    function readLinkedRefer(scnr) {\n        const fn = (buf) => {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"%\" /* TokenChars.Modulo */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \"(\" /* TokenChars.ParenLeft */ ||\n                ch === \")\" /* TokenChars.ParenRight */ ||\n                !ch) {\n                return buf;\n            }\n            else if (ch === CHAR_SP) {\n                return buf;\n            }\n            else if (ch === CHAR_LF || ch === DOT) {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n            else {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n        };\n        return fn('');\n    }\n    function readPlural(scnr) {\n        skipSpaces(scnr);\n        const plural = eat(scnr, \"|\" /* TokenChars.Pipe */);\n        skipSpaces(scnr);\n        return plural;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInPlaceholder(scnr, context) {\n        let token = null;\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                if (context.braceNest >= 1) {\n                    emitError(CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 2 /* TokenTypes.BraceLeft */, \"{\" /* TokenChars.BraceLeft */);\n                skipSpaces(scnr);\n                context.braceNest++;\n                return token;\n            case \"}\" /* TokenChars.BraceRight */:\n                if (context.braceNest > 0 &&\n                    context.currentType === 2 /* TokenTypes.BraceLeft */) {\n                    emitError(CompileErrorCodes.EMPTY_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n                context.braceNest--;\n                context.braceNest > 0 && skipSpaces(scnr);\n                if (context.inLinked && context.braceNest === 0) {\n                    context.inLinked = false;\n                }\n                return token;\n            case \"@\" /* TokenChars.LinkedAlias */:\n                if (context.braceNest > 0) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                }\n                token = readTokenInLinked(scnr, context) || getEndToken(context);\n                context.braceNest = 0;\n                return token;\n            default: {\n                let validNamedIdentifier = true;\n                let validListIdentifier = true;\n                let validLiteral = true;\n                if (isPluralStart(scnr)) {\n                    if (context.braceNest > 0) {\n                        emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    }\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (context.braceNest > 0 &&\n                    (context.currentType === 5 /* TokenTypes.Named */ ||\n                        context.currentType === 6 /* TokenTypes.List */ ||\n                        context.currentType === 7 /* TokenTypes.Literal */)) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    context.braceNest = 0;\n                    return readToken(scnr, context);\n                }\n                if ((validNamedIdentifier = isNamedIdentifierStart(scnr, context))) {\n                    token = getToken(context, 5 /* TokenTypes.Named */, readNamedIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validListIdentifier = isListIdentifierStart(scnr, context))) {\n                    token = getToken(context, 6 /* TokenTypes.List */, readListIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validLiteral = isLiteralStart(scnr, context))) {\n                    token = getToken(context, 7 /* TokenTypes.Literal */, readLiteral(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if (!validNamedIdentifier && !validListIdentifier && !validLiteral) {\n                    // TODO: we should be re-designed invalid cases, when we will extend message syntax near the future ...\n                    token = getToken(context, 13 /* TokenTypes.InvalidPlace */, readInvalidIdentifier(scnr));\n                    emitError(CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER, currentPosition(), 0, token.value);\n                    skipSpaces(scnr);\n                    return token;\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInLinked(scnr, context) {\n        const { currentType } = context;\n        let token = null;\n        const ch = scnr.currentChar();\n        if ((currentType === 8 /* TokenTypes.LinkedAlias */ ||\n            currentType === 9 /* TokenTypes.LinkedDot */ ||\n            currentType === 12 /* TokenTypes.LinkedModifier */ ||\n            currentType === 10 /* TokenTypes.LinkedDelimiter */) &&\n            (ch === CHAR_LF || ch === CHAR_SP)) {\n            emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n        }\n        switch (ch) {\n            case \"@\" /* TokenChars.LinkedAlias */:\n                scnr.next();\n                token = getToken(context, 8 /* TokenTypes.LinkedAlias */, \"@\" /* TokenChars.LinkedAlias */);\n                context.inLinked = true;\n                return token;\n            case \".\" /* TokenChars.LinkedDot */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 9 /* TokenTypes.LinkedDot */, \".\" /* TokenChars.LinkedDot */);\n            case \":\" /* TokenChars.LinkedDelimiter */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 10 /* TokenTypes.LinkedDelimiter */, \":\" /* TokenChars.LinkedDelimiter */);\n            default:\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (isLinkedDotStart(scnr, context) ||\n                    isLinkedDelimiterStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return readTokenInLinked(scnr, context);\n                }\n                if (isLinkedModifierStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return getToken(context, 12 /* TokenTypes.LinkedModifier */, readLinkedModifier(scnr));\n                }\n                if (isLinkedReferStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                        // scan the placeholder\n                        return readTokenInPlaceholder(scnr, context) || token;\n                    }\n                    else {\n                        return getToken(context, 11 /* TokenTypes.LinkedKey */, readLinkedRefer(scnr));\n                    }\n                }\n                if (currentType === 8 /* TokenTypes.LinkedAlias */) {\n                    emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n                }\n                context.braceNest = 0;\n                context.inLinked = false;\n                return readToken(scnr, context);\n        }\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readToken(scnr, context) {\n        let token = { type: 14 /* TokenTypes.EOF */ };\n        if (context.braceNest > 0) {\n            return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n        }\n        if (context.inLinked) {\n            return readTokenInLinked(scnr, context) || getEndToken(context);\n        }\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n            case \"}\" /* TokenChars.BraceRight */:\n                emitError(CompileErrorCodes.UNBALANCED_CLOSING_BRACE, currentPosition(), 0);\n                scnr.next();\n                return getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n            case \"@\" /* TokenChars.LinkedAlias */:\n                return readTokenInLinked(scnr, context) || getEndToken(context);\n            default: {\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                const { isModulo, hasSpace } = detectModuloStart(scnr);\n                if (isModulo) {\n                    return hasSpace\n                        ? getToken(context, 0 /* TokenTypes.Text */, readText(scnr))\n                        : getToken(context, 4 /* TokenTypes.Modulo */, readModulo(scnr));\n                }\n                if (isTextStart(scnr)) {\n                    return getToken(context, 0 /* TokenTypes.Text */, readText(scnr));\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    function nextToken() {\n        const { currentType, offset, startLoc, endLoc } = _context;\n        _context.lastType = currentType;\n        _context.lastOffset = offset;\n        _context.lastStartLoc = startLoc;\n        _context.lastEndLoc = endLoc;\n        _context.offset = currentOffset();\n        _context.startLoc = currentPosition();\n        if (_scnr.currentChar() === EOF) {\n            return getToken(_context, 14 /* TokenTypes.EOF */);\n        }\n        return readToken(_scnr, _context);\n    }\n    return {\n        nextToken,\n        currentOffset,\n        currentPosition,\n        context\n    };\n}\n\nconst ERROR_DOMAIN$2 = 'parser';\n// Backslash backslash, backslash quote, uHHHH, UHHHHHH.\nconst KNOWN_ESCAPES = /(?:\\\\\\\\|\\\\'|\\\\u([0-9a-fA-F]{4})|\\\\U([0-9a-fA-F]{6}))/g;\nfunction fromEscapeSequence(match, codePoint4, codePoint6) {\n    switch (match) {\n        case `\\\\\\\\`:\n            return `\\\\`;\n        // eslint-disable-next-line no-useless-escape\n        case `\\\\\\'`:\n            // eslint-disable-next-line no-useless-escape\n            return `\\'`;\n        default: {\n            const codePoint = parseInt(codePoint4 || codePoint6, 16);\n            if (codePoint <= 0xd7ff || codePoint >= 0xe000) {\n                return String.fromCodePoint(codePoint);\n            }\n            // invalid ...\n            // Replace them with U+FFFD REPLACEMENT CHARACTER.\n            return '�';\n        }\n    }\n}\nfunction createParser(options = {}) {\n    const location = options.location !== false;\n    const { onError, onWarn } = options;\n    function emitError(tokenzer, code, start, offset, ...args) {\n        const end = tokenzer.currentPosition();\n        end.offset += offset;\n        end.column += offset;\n        if (onError) {\n            const loc = location ? createLocation(start, end) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$2,\n                args\n            });\n            onError(err);\n        }\n    }\n    function emitWarn(tokenzer, code, start, offset, ...args) {\n        const end = tokenzer.currentPosition();\n        end.offset += offset;\n        end.column += offset;\n        if (onWarn) {\n            const loc = location ? createLocation(start, end) : null;\n            onWarn(createCompileWarn(code, loc, args));\n        }\n    }\n    function startNode(type, offset, loc) {\n        const node = { type };\n        if (location) {\n            node.start = offset;\n            node.end = offset;\n            node.loc = { start: loc, end: loc };\n        }\n        return node;\n    }\n    function endNode(node, offset, pos, type) {\n        if (type) {\n            node.type = type;\n        }\n        if (location) {\n            node.end = offset;\n            if (node.loc) {\n                node.loc.end = pos;\n            }\n        }\n    }\n    function parseText(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(3 /* NodeTypes.Text */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseList(tokenizer, index) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(5 /* NodeTypes.List */, offset, loc);\n        node.index = parseInt(index, 10);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseNamed(tokenizer, key, modulo) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(4 /* NodeTypes.Named */, offset, loc);\n        node.key = key;\n        if (modulo === true) {\n            node.modulo = true;\n        }\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLiteral(tokenizer, value) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(9 /* NodeTypes.Literal */, offset, loc);\n        node.value = value.replace(KNOWN_ESCAPES, fromEscapeSequence);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinkedModifier(tokenizer) {\n        const token = tokenizer.nextToken();\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get linked dot loc\n        const node = startNode(8 /* NodeTypes.LinkedModifier */, offset, loc);\n        if (token.type !== 12 /* TokenTypes.LinkedModifier */) {\n            // empty modifier\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER, context.lastStartLoc, 0);\n            node.value = '';\n            endNode(node, offset, loc);\n            return {\n                nextConsumeToken: token,\n                node\n            };\n        }\n        // check token\n        if (token.value == null) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        node.value = token.value || '';\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node\n        };\n    }\n    function parseLinkedKey(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(7 /* NodeTypes.LinkedKey */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinked(tokenizer) {\n        const context = tokenizer.context();\n        const linkedNode = startNode(6 /* NodeTypes.Linked */, context.offset, context.startLoc);\n        let token = tokenizer.nextToken();\n        if (token.type === 9 /* TokenTypes.LinkedDot */) {\n            const parsed = parseLinkedModifier(tokenizer);\n            linkedNode.modifier = parsed.node;\n            token = parsed.nextConsumeToken || tokenizer.nextToken();\n        }\n        // asset check token\n        if (token.type !== 10 /* TokenTypes.LinkedDelimiter */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        token = tokenizer.nextToken();\n        // skip brace left\n        if (token.type === 2 /* TokenTypes.BraceLeft */) {\n            token = tokenizer.nextToken();\n        }\n        switch (token.type) {\n            case 11 /* TokenTypes.LinkedKey */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLinkedKey(tokenizer, token.value || '');\n                break;\n            case 5 /* TokenTypes.Named */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseNamed(tokenizer, token.value || '');\n                break;\n            case 6 /* TokenTypes.List */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseList(tokenizer, token.value || '');\n                break;\n            case 7 /* TokenTypes.Literal */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLiteral(tokenizer, token.value || '');\n                break;\n            default: {\n                // empty key\n                emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY, context.lastStartLoc, 0);\n                const nextContext = tokenizer.context();\n                const emptyLinkedKeyNode = startNode(7 /* NodeTypes.LinkedKey */, nextContext.offset, nextContext.startLoc);\n                emptyLinkedKeyNode.value = '';\n                endNode(emptyLinkedKeyNode, nextContext.offset, nextContext.startLoc);\n                linkedNode.key = emptyLinkedKeyNode;\n                endNode(linkedNode, nextContext.offset, nextContext.startLoc);\n                return {\n                    nextConsumeToken: token,\n                    node: linkedNode\n                };\n            }\n        }\n        endNode(linkedNode, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node: linkedNode\n        };\n    }\n    function parseMessage(tokenizer) {\n        const context = tokenizer.context();\n        const startOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? tokenizer.currentOffset()\n            : context.offset;\n        const startLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.endLoc\n            : context.startLoc;\n        const node = startNode(2 /* NodeTypes.Message */, startOffset, startLoc);\n        node.items = [];\n        let nextToken = null;\n        let modulo = null;\n        do {\n            const token = nextToken || tokenizer.nextToken();\n            nextToken = null;\n            switch (token.type) {\n                case 0 /* TokenTypes.Text */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseText(tokenizer, token.value || ''));\n                    break;\n                case 6 /* TokenTypes.List */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseList(tokenizer, token.value || ''));\n                    break;\n                case 4 /* TokenTypes.Modulo */:\n                    modulo = true;\n                    break;\n                case 5 /* TokenTypes.Named */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseNamed(tokenizer, token.value || '', !!modulo));\n                    if (modulo) {\n                        emitWarn(tokenizer, CompileWarnCodes.USE_MODULO_SYNTAX, context.lastStartLoc, 0, getTokenCaption(token));\n                        modulo = null;\n                    }\n                    break;\n                case 7 /* TokenTypes.Literal */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseLiteral(tokenizer, token.value || ''));\n                    break;\n                case 8 /* TokenTypes.LinkedAlias */: {\n                    const parsed = parseLinked(tokenizer);\n                    node.items.push(parsed.node);\n                    nextToken = parsed.nextConsumeToken || null;\n                    break;\n                }\n            }\n        } while (context.currentType !== 14 /* TokenTypes.EOF */ &&\n            context.currentType !== 1 /* TokenTypes.Pipe */);\n        // adjust message node loc\n        const endOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastOffset\n            : tokenizer.currentOffset();\n        const endLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastEndLoc\n            : tokenizer.currentPosition();\n        endNode(node, endOffset, endLoc);\n        return node;\n    }\n    function parsePlural(tokenizer, offset, loc, msgNode) {\n        const context = tokenizer.context();\n        let hasEmptyMessage = msgNode.items.length === 0;\n        const node = startNode(1 /* NodeTypes.Plural */, offset, loc);\n        node.cases = [];\n        node.cases.push(msgNode);\n        do {\n            const msg = parseMessage(tokenizer);\n            if (!hasEmptyMessage) {\n                hasEmptyMessage = msg.items.length === 0;\n            }\n            node.cases.push(msg);\n        } while (context.currentType !== 14 /* TokenTypes.EOF */);\n        if (hasEmptyMessage) {\n            emitError(tokenizer, CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL, loc, 0);\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseResource(tokenizer) {\n        const context = tokenizer.context();\n        const { offset, startLoc } = context;\n        const msgNode = parseMessage(tokenizer);\n        if (context.currentType === 14 /* TokenTypes.EOF */) {\n            return msgNode;\n        }\n        else {\n            return parsePlural(tokenizer, offset, startLoc, msgNode);\n        }\n    }\n    function parse(source) {\n        const tokenizer = createTokenizer(source, assign({}, options));\n        const context = tokenizer.context();\n        const node = startNode(0 /* NodeTypes.Resource */, context.offset, context.startLoc);\n        if (location && node.loc) {\n            node.loc.source = source;\n        }\n        node.body = parseResource(tokenizer);\n        if (options.onCacheKey) {\n            node.cacheKey = options.onCacheKey(source);\n        }\n        // assert whether achieved to EOF\n        if (context.currentType !== 14 /* TokenTypes.EOF */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, source[context.offset] || '');\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    return { parse };\n}\nfunction getTokenCaption(token) {\n    if (token.type === 14 /* TokenTypes.EOF */) {\n        return 'EOF';\n    }\n    const name = (token.value || '').replace(/\\r?\\n/gu, '\\\\n');\n    return name.length > 10 ? name.slice(0, 9) + '…' : name;\n}\n\nfunction createTransformer(ast, options = {} // eslint-disable-line\n) {\n    const _context = {\n        ast,\n        helpers: new Set()\n    };\n    const context = () => _context;\n    const helper = (name) => {\n        _context.helpers.add(name);\n        return name;\n    };\n    return { context, helper };\n}\nfunction traverseNodes(nodes, transformer) {\n    for (let i = 0; i < nodes.length; i++) {\n        traverseNode(nodes[i], transformer);\n    }\n}\nfunction traverseNode(node, transformer) {\n    // TODO: if we need pre-hook of transform, should be implemented to here\n    switch (node.type) {\n        case 1 /* NodeTypes.Plural */:\n            traverseNodes(node.cases, transformer);\n            transformer.helper(\"plural\" /* HelperNameMap.PLURAL */);\n            break;\n        case 2 /* NodeTypes.Message */:\n            traverseNodes(node.items, transformer);\n            break;\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            traverseNode(linked.key, transformer);\n            transformer.helper(\"linked\" /* HelperNameMap.LINKED */);\n            transformer.helper(\"type\" /* HelperNameMap.TYPE */);\n            break;\n        }\n        case 5 /* NodeTypes.List */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"list\" /* HelperNameMap.LIST */);\n            break;\n        case 4 /* NodeTypes.Named */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"named\" /* HelperNameMap.NAMED */);\n            break;\n    }\n    // TODO: if we need post-hook of transform, should be implemented to here\n}\n// transform AST\nfunction transform(ast, options = {} // eslint-disable-line\n) {\n    const transformer = createTransformer(ast);\n    transformer.helper(\"normalize\" /* HelperNameMap.NORMALIZE */);\n    // traverse\n    ast.body && traverseNode(ast.body, transformer);\n    // set meta information\n    const context = transformer.context();\n    ast.helpers = Array.from(context.helpers);\n}\n\nfunction optimize(ast) {\n    const body = ast.body;\n    if (body.type === 2 /* NodeTypes.Message */) {\n        optimizeMessageNode(body);\n    }\n    else {\n        body.cases.forEach(c => optimizeMessageNode(c));\n    }\n    return ast;\n}\nfunction optimizeMessageNode(message) {\n    if (message.items.length === 1) {\n        const item = message.items[0];\n        if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n            message.static = item.value;\n            delete item.value; // optimization for size\n        }\n    }\n    else {\n        const values = [];\n        for (let i = 0; i < message.items.length; i++) {\n            const item = message.items[i];\n            if (!(item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */)) {\n                break;\n            }\n            if (item.value == null) {\n                break;\n            }\n            values.push(item.value);\n        }\n        if (values.length === message.items.length) {\n            message.static = join(values);\n            for (let i = 0; i < message.items.length; i++) {\n                const item = message.items[i];\n                if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n                    delete item.value; // optimization for size\n                }\n            }\n        }\n    }\n}\n\nconst ERROR_DOMAIN$1 = 'minifier';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction minify(node) {\n    node.t = node.type;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */: {\n            const resource = node;\n            minify(resource.body);\n            resource.b = resource.body;\n            delete resource.body;\n            break;\n        }\n        case 1 /* NodeTypes.Plural */: {\n            const plural = node;\n            const cases = plural.cases;\n            for (let i = 0; i < cases.length; i++) {\n                minify(cases[i]);\n            }\n            plural.c = cases;\n            delete plural.cases;\n            break;\n        }\n        case 2 /* NodeTypes.Message */: {\n            const message = node;\n            const items = message.items;\n            for (let i = 0; i < items.length; i++) {\n                minify(items[i]);\n            }\n            message.i = items;\n            delete message.items;\n            if (message.static) {\n                message.s = message.static;\n                delete message.static;\n            }\n            break;\n        }\n        case 3 /* NodeTypes.Text */:\n        case 9 /* NodeTypes.Literal */:\n        case 8 /* NodeTypes.LinkedModifier */:\n        case 7 /* NodeTypes.LinkedKey */: {\n            const valueNode = node;\n            if (valueNode.value) {\n                valueNode.v = valueNode.value;\n                delete valueNode.value;\n            }\n            break;\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            minify(linked.key);\n            linked.k = linked.key;\n            delete linked.key;\n            if (linked.modifier) {\n                minify(linked.modifier);\n                linked.m = linked.modifier;\n                delete linked.modifier;\n            }\n            break;\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            list.i = list.index;\n            delete list.index;\n            break;\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            named.k = named.key;\n            delete named.key;\n            break;\n        }\n        default:\n            {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN$1,\n                    args: [node.type]\n                });\n            }\n    }\n    delete node.type;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference types=\"source-map-js\" />\nconst ERROR_DOMAIN = 'parser';\nfunction createCodeGenerator(ast, options) {\n    const { sourceMap, filename, breakLineCode, needIndent: _needIndent } = options;\n    const location = options.location !== false;\n    const _context = {\n        filename,\n        code: '',\n        column: 1,\n        line: 1,\n        offset: 0,\n        map: undefined,\n        breakLineCode,\n        needIndent: _needIndent,\n        indentLevel: 0\n    };\n    if (location && ast.loc) {\n        _context.source = ast.loc.source;\n    }\n    const context = () => _context;\n    function push(code, node) {\n        _context.code += code;\n    }\n    function _newline(n, withBreakLine = true) {\n        const _breakLineCode = withBreakLine ? breakLineCode : '';\n        push(_needIndent ? _breakLineCode + `  `.repeat(n) : _breakLineCode);\n    }\n    function indent(withNewLine = true) {\n        const level = ++_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function deindent(withNewLine = true) {\n        const level = --_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function newline() {\n        _newline(_context.indentLevel);\n    }\n    const helper = (key) => `_${key}`;\n    const needIndent = () => _context.needIndent;\n    return {\n        context,\n        push,\n        indent,\n        deindent,\n        newline,\n        helper,\n        needIndent\n    };\n}\nfunction generateLinkedNode(generator, node) {\n    const { helper } = generator;\n    generator.push(`${helper(\"linked\" /* HelperNameMap.LINKED */)}(`);\n    generateNode(generator, node.key);\n    if (node.modifier) {\n        generator.push(`, `);\n        generateNode(generator, node.modifier);\n        generator.push(`, _type`);\n    }\n    else {\n        generator.push(`, undefined, _type`);\n    }\n    generator.push(`)`);\n}\nfunction generateMessageNode(generator, node) {\n    const { helper, needIndent } = generator;\n    generator.push(`${helper(\"normalize\" /* HelperNameMap.NORMALIZE */)}([`);\n    generator.indent(needIndent());\n    const length = node.items.length;\n    for (let i = 0; i < length; i++) {\n        generateNode(generator, node.items[i]);\n        if (i === length - 1) {\n            break;\n        }\n        generator.push(', ');\n    }\n    generator.deindent(needIndent());\n    generator.push('])');\n}\nfunction generatePluralNode(generator, node) {\n    const { helper, needIndent } = generator;\n    if (node.cases.length > 1) {\n        generator.push(`${helper(\"plural\" /* HelperNameMap.PLURAL */)}([`);\n        generator.indent(needIndent());\n        const length = node.cases.length;\n        for (let i = 0; i < length; i++) {\n            generateNode(generator, node.cases[i]);\n            if (i === length - 1) {\n                break;\n            }\n            generator.push(', ');\n        }\n        generator.deindent(needIndent());\n        generator.push(`])`);\n    }\n}\nfunction generateResource(generator, node) {\n    if (node.body) {\n        generateNode(generator, node.body);\n    }\n    else {\n        generator.push('null');\n    }\n}\nfunction generateNode(generator, node) {\n    const { helper } = generator;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */:\n            generateResource(generator, node);\n            break;\n        case 1 /* NodeTypes.Plural */:\n            generatePluralNode(generator, node);\n            break;\n        case 2 /* NodeTypes.Message */:\n            generateMessageNode(generator, node);\n            break;\n        case 6 /* NodeTypes.Linked */:\n            generateLinkedNode(generator, node);\n            break;\n        case 8 /* NodeTypes.LinkedModifier */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 7 /* NodeTypes.LinkedKey */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 5 /* NodeTypes.List */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"list\" /* HelperNameMap.LIST */)}(${node.index}))`, node);\n            break;\n        case 4 /* NodeTypes.Named */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"named\" /* HelperNameMap.NAMED */)}(${JSON.stringify(node.key)}))`, node);\n            break;\n        case 9 /* NodeTypes.Literal */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 3 /* NodeTypes.Text */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        default:\n            {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN,\n                    args: [node.type]\n                });\n            }\n    }\n}\n// generate code from AST\nconst generate = (ast, options = {} // eslint-disable-line\n) => {\n    const mode = isString(options.mode) ? options.mode : 'normal';\n    const filename = isString(options.filename)\n        ? options.filename\n        : 'message.intl';\n    const sourceMap = !!options.sourceMap;\n    // prettier-ignore\n    const breakLineCode = options.breakLineCode != null\n        ? options.breakLineCode\n        : mode === 'arrow'\n            ? ';'\n            : '\\n';\n    const needIndent = options.needIndent ? options.needIndent : mode !== 'arrow';\n    const helpers = ast.helpers || [];\n    const generator = createCodeGenerator(ast, {\n        mode,\n        filename,\n        sourceMap,\n        breakLineCode,\n        needIndent\n    });\n    generator.push(mode === 'normal' ? `function __msg__ (ctx) {` : `(ctx) => {`);\n    generator.indent(needIndent);\n    if (helpers.length > 0) {\n        generator.push(`const { ${join(helpers.map(s => `${s}: _${s}`), ', ')} } = ctx`);\n        generator.newline();\n    }\n    generator.push(`return `);\n    generateNode(generator, ast);\n    generator.deindent(needIndent);\n    generator.push(`}`);\n    delete ast.helpers;\n    const { code, map } = generator.context();\n    return {\n        ast,\n        code,\n        map: map ? map.toJSON() : undefined // eslint-disable-line @typescript-eslint/no-explicit-any\n    };\n};\n\nfunction baseCompile(source, options = {}) {\n    const assignedOptions = assign({}, options);\n    const jit = !!assignedOptions.jit;\n    const enalbeMinify = !!assignedOptions.minify;\n    const enambeOptimize = assignedOptions.optimize == null ? true : assignedOptions.optimize;\n    // parse source codes\n    const parser = createParser(assignedOptions);\n    const ast = parser.parse(source);\n    if (!jit) {\n        // transform ASTs\n        transform(ast, assignedOptions);\n        // generate javascript codes\n        return generate(ast, assignedOptions);\n    }\n    else {\n        // optimize ASTs\n        enambeOptimize && optimize(ast);\n        // minimize ASTs\n        enalbeMinify && minify(ast);\n        // In JIT mode, no ast transform, no code generation.\n        return { ast, code: '' };\n    }\n}\n\nexport { CompileErrorCodes, CompileWarnCodes, ERROR_DOMAIN$2 as ERROR_DOMAIN, LOCATION_STUB, baseCompile, createCompileError, createCompileWarn, createLocation, createParser, createPosition, defaultOnError, detectHtmlTag, errorMessages, warnMessages };\n","/*!\n  * core-base v9.13.1\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { getGlobalThis, isObject, isFunction, isString, isNumber, isPlainObject, assign, join, toDisplayString, isArray, incrementer, format as format$1, isPromise, isBoolean, warn, isRegExp, warnOnce, escapeHtml, inBrowser, mark, measure, isEmptyObject, generateCodeFrame, generateFormatCacheKey, isDate } from '@intlify/shared';\nimport { CompileWarnCodes, CompileErrorCodes, createCompileError, detectHtmlTag, defaultOnError, baseCompile as baseCompile$1 } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\n\n/**\n * This is only called in esm-bundler builds.\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n    }\n    if (typeof __INTLIFY_JIT_COMPILATION__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_JIT_COMPILATION__ = false;\n    }\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n    }\n}\n\nconst pathStateMachine =  [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\n        4 /* States.IN_SUB_PATH */,\n        2 /* Actions.INC_SUB_PATH_DEPTH */\n    ],\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\n * Check if an expression is a literal value.\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n    return literalValueRE.test(exp);\n}\n/**\n * Strip quotes from a string\n */\nfunction stripQuotes(str) {\n    const a = str.charCodeAt(0);\n    const b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\n * Determine the type of a character in a keypath.\n */\nfunction getPathCharType(ch) {\n    if (ch === undefined || ch === null) {\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\n    }\n    const code = ch.charCodeAt(0);\n    switch (code) {\n        case 0x5b: // [\n        case 0x5d: // ]\n        case 0x2e: // .\n        case 0x22: // \"\n        case 0x27: // '\n            return ch;\n        case 0x5f: // _\n        case 0x24: // $\n        case 0x2d: // -\n            return \"i\" /* PathCharTypes.IDENT */;\n        case 0x09: // Tab (HT)\n        case 0x0a: // Newline (LF)\n        case 0x0d: // Return (CR)\n        case 0xa0: // No-break space (NBSP)\n        case 0xfeff: // Byte Order Mark (BOM)\n        case 0x2028: // Line Separator (LS)\n        case 0x2029: // Paragraph Separator (PS)\n            return \"w\" /* PathCharTypes.WORKSPACE */;\n    }\n    return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\nfunction formatSubPath(path) {\n    const trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n        return false;\n    }\n    return isLiteral(trimmed)\n        ? stripQuotes(trimmed)\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\n * Parse a string path into an array of segments\n */\nfunction parse(path) {\n    const keys = [];\n    let index = -1;\n    let mode = 0 /* States.BEFORE_PATH */;\n    let subPathDepth = 0;\n    let c;\n    let key; // eslint-disable-line\n    let newChar;\n    let type;\n    let transition;\n    let action;\n    let typeMap;\n    const actions = [];\n    actions[0 /* Actions.APPEND */] = () => {\n        if (key === undefined) {\n            key = newChar;\n        }\n        else {\n            key += newChar;\n        }\n    };\n    actions[1 /* Actions.PUSH */] = () => {\n        if (key !== undefined) {\n            keys.push(key);\n            key = undefined;\n        }\n    };\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n        actions[0 /* Actions.APPEND */]();\n        subPathDepth++;\n    };\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n        if (subPathDepth > 0) {\n            subPathDepth--;\n            mode = 4 /* States.IN_SUB_PATH */;\n            actions[0 /* Actions.APPEND */]();\n        }\n        else {\n            subPathDepth = 0;\n            if (key === undefined) {\n                return false;\n            }\n            key = formatSubPath(key);\n            if (key === false) {\n                return false;\n            }\n            else {\n                actions[1 /* Actions.PUSH */]();\n            }\n        }\n    };\n    function maybeUnescapeQuote() {\n        const nextChar = path[index + 1];\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\n            index++;\n            newChar = '\\\\' + nextChar;\n            actions[0 /* Actions.APPEND */]();\n            return true;\n        }\n    }\n    while (mode !== null) {\n        index++;\n        c = path[index];\n        if (c === '\\\\' && maybeUnescapeQuote()) {\n            continue;\n        }\n        type = getPathCharType(c);\n        typeMap = pathStateMachine[mode];\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n        // check parse error\n        if (transition === 8 /* States.ERROR */) {\n            return;\n        }\n        mode = transition[0];\n        if (transition[1] !== undefined) {\n            action = actions[transition[1]];\n            if (action) {\n                newChar = c;\n                if (action() === false) {\n                    return;\n                }\n            }\n        }\n        // check parse finish\n        if (mode === 7 /* States.AFTER_PATH */) {\n            return keys;\n        }\n    }\n}\n// path token cache\nconst cache = new Map();\n/**\n * key-value message resolver\n *\n * @remarks\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveWithKeyValue(obj, path) {\n    return isObject(obj) ? obj[path] : null;\n}\n/**\n * message resolver\n *\n * @remarks\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveValue(obj, path) {\n    // check object\n    if (!isObject(obj)) {\n        return null;\n    }\n    // parse path\n    let hit = cache.get(path);\n    if (!hit) {\n        hit = parse(path);\n        if (hit) {\n            cache.set(path, hit);\n        }\n    }\n    // check hit\n    if (!hit) {\n        return null;\n    }\n    // resolve path value\n    const len = hit.length;\n    let last = obj;\n    let i = 0;\n    while (i < len) {\n        const val = last[hit[i]];\n        if (val === undefined) {\n            return null;\n        }\n        if (isFunction(last)) {\n            return null;\n        }\n        last = val;\n        i++;\n    }\n    return last;\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n    choice = Math.abs(choice);\n    if (choicesLength === 2) {\n        // prettier-ignore\n        return choice\n            ? choice > 1\n                ? 1\n                : 0\n            : 1;\n    }\n    return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n    // prettier-ignore\n    const index = isNumber(options.pluralIndex)\n        ? options.pluralIndex\n        : -1;\n    // prettier-ignore\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\n        ? isNumber(options.named.count)\n            ? options.named.count\n            : isNumber(options.named.n)\n                ? options.named.n\n                : index\n        : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n    if (!props.count) {\n        props.count = pluralIndex;\n    }\n    if (!props.n) {\n        props.n = pluralIndex;\n    }\n}\nfunction createMessageContext(options = {}) {\n    const locale = options.locale;\n    const pluralIndex = getPluralIndex(options);\n    const pluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? options.pluralRules[locale]\n        : pluralDefault;\n    const orgPluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? pluralDefault\n        : undefined;\n    const plural = (messages) => {\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n    };\n    const _list = options.list || [];\n    const list = (index) => _list[index];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const _named = options.named || {};\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n    const named = (key) => _named[key];\n    function message(key) {\n        // prettier-ignore\n        const msg = isFunction(options.messages)\n            ? options.messages(key)\n            : isObject(options.messages)\n                ? options.messages[key]\n                : false;\n        return !msg\n            ? options.parent\n                ? options.parent.message(key) // resolve from parent messages\n                : DEFAULT_MESSAGE\n            : msg;\n    }\n    const _modifier = (name) => options.modifiers\n        ? options.modifiers[name]\n        : DEFAULT_MODIFIER;\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\n        ? options.processor.normalize\n        : DEFAULT_NORMALIZE;\n    const interpolate = isPlainObject(options.processor) &&\n        isFunction(options.processor.interpolate)\n        ? options.processor.interpolate\n        : DEFAULT_INTERPOLATE;\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\n        ? options.processor.type\n        : DEFAULT_MESSAGE_DATA_TYPE;\n    const linked = (key, ...args) => {\n        const [arg1, arg2] = args;\n        let type = 'text';\n        let modifier = '';\n        if (args.length === 1) {\n            if (isObject(arg1)) {\n                modifier = arg1.modifier || modifier;\n                type = arg1.type || type;\n            }\n            else if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n        }\n        else if (args.length === 2) {\n            if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n            if (isString(arg2)) {\n                type = arg2 || type;\n            }\n        }\n        const ret = message(key)(ctx);\n        const msg = \n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\n        type === 'vnode' && isArray(ret) && modifier\n            ? ret[0]\n            : ret;\n        return modifier ? _modifier(modifier)(msg, type) : msg;\n    };\n    const ctx = {\n        [\"list\" /* HelperNameMap.LIST */]: list,\n        [\"named\" /* HelperNameMap.NAMED */]: named,\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\n        [\"type\" /* HelperNameMap.TYPE */]: type,\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n        [\"values\" /* HelperNameMap.VALUES */]: assign({}, _list, _named)\n    };\n    return ctx;\n}\n\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n    devtools = hook;\n}\nfunction getDevToolsHook() {\n    return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n    // TODO: queue if devtools is undefined\n    devtools &&\n        devtools.emit(\"i18n:init\" /* IntlifyDevToolsHooks.I18nInit */, {\n            timestamp: Date.now(),\n            i18n,\n            version,\n            meta\n        });\n}\nconst translateDevTools = /* #__PURE__*/ createDevToolsHook(\"function:translate\" /* IntlifyDevToolsHooks.FunctionTranslate */);\nfunction createDevToolsHook(hook) {\n    return (payloads) => devtools && devtools.emit(hook, payloads);\n}\n\nconst code$1 = CompileWarnCodes.__EXTEND_POINT__;\nconst inc$1 = incrementer(code$1);\nconst CoreWarnCodes = {\n    NOT_FOUND_KEY: code$1, // 2\n    FALLBACK_TO_TRANSLATE: inc$1(), // 3\n    CANNOT_FORMAT_NUMBER: inc$1(), // 4\n    FALLBACK_TO_NUMBER_FORMAT: inc$1(), // 5\n    CANNOT_FORMAT_DATE: inc$1(), // 6\n    FALLBACK_TO_DATE_FORMAT: inc$1(), // 7\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: inc$1(), // 8\n    __EXTEND_POINT__: inc$1() // 9\n};\n/** @internal */\nconst warnMessages = {\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n    return format$1(warnMessages[code], ...args);\n}\n\nconst code = CompileErrorCodes.__EXTEND_POINT__;\nconst inc = incrementer(code);\nconst CoreErrorCodes = {\n    INVALID_ARGUMENT: code, // 17\n    INVALID_DATE_ARGUMENT: inc(), // 18\n    INVALID_ISO_DATE_ARGUMENT: inc(), // 19\n    NOT_SUPPORT_NON_STRING_MESSAGE: inc(), // 20\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: inc(), // 21\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: inc(), // 22\n    NOT_SUPPORT_LOCALE_TYPE: inc(), // 23\n    __EXTEND_POINT__: inc() // 24\n};\nfunction createCoreError(code) {\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\n        'Make sure your Date represents a valid date.',\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n    return options.locale != null\n        ? resolveLocale(options.locale)\n        : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n    if (isString(locale)) {\n        return locale;\n    }\n    else {\n        if (isFunction(locale)) {\n            if (locale.resolvedOnce && _resolveLocale != null) {\n                return _resolveLocale;\n            }\n            else if (locale.constructor.name === 'Function') {\n                const resolve = locale();\n                if (isPromise(resolve)) {\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n                }\n                return (_resolveLocale = resolve);\n            }\n            else {\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n            }\n        }\n        else {\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n        }\n    }\n}\n/**\n * Fallback with simple implemenation\n *\n * @remarks\n * A fallback locale function implemented with a simple fallback algorithm.\n *\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\n) {\n    // prettier-ignore\n    return [...new Set([\n            start,\n            ...(isArray(fallback)\n                ? fallback\n                : isObject(fallback)\n                    ? Object.keys(fallback)\n                    : isString(fallback)\n                        ? [fallback]\n                        : [start])\n        ])];\n}\n/**\n * Fallback with locale chain\n *\n * @remarks\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n    const context = ctx;\n    if (!context.__localeChainCache) {\n        context.__localeChainCache = new Map();\n    }\n    let chain = context.__localeChainCache.get(startLocale);\n    if (!chain) {\n        chain = [];\n        // first block defined by start\n        let block = [start];\n        // while any intervening block found\n        while (isArray(block)) {\n            block = appendBlockToChain(chain, block, fallback);\n        }\n        // prettier-ignore\n        // last block defined by default\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\n            ? fallback\n            : fallback['default']\n                ? fallback['default']\n                : null;\n        // convert defaults to array\n        block = isString(defaults) ? [defaults] : defaults;\n        if (isArray(block)) {\n            appendBlockToChain(chain, block, false);\n        }\n        context.__localeChainCache.set(startLocale, chain);\n    }\n    return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n    let follow = true;\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\n        const locale = block[i];\n        if (isString(locale)) {\n            follow = appendLocaleToChain(chain, block[i], blocks);\n        }\n    }\n    return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n    let follow;\n    const tokens = locale.split('-');\n    do {\n        const target = tokens.join('-');\n        follow = appendItemToChain(chain, target, blocks);\n        tokens.splice(-1, 1);\n    } while (tokens.length && follow === true);\n    return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n    let follow = false;\n    if (!chain.includes(target)) {\n        follow = true;\n        if (target) {\n            follow = target[target.length - 1] !== '!';\n            const locale = target.replace(/!/g, '');\n            chain.push(locale);\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n            ) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                follow = blocks[locale];\n            }\n        }\n    }\n    return follow;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Intlify core-base version\n * @internal\n */\nconst VERSION = '9.13.1';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n    return {\n        upper: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toUpperCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toUpperCase()\n                    : val;\n        },\n        lower: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toLowerCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toLowerCase()\n                    : val;\n        },\n        capitalize: (val, type) => {\n            // prettier-ignore\n            return (type === 'text' && isString(val)\n                ? capitalize(val)\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? capitalize(val.children)\n                    : val);\n        }\n    };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n    _compiler = compiler;\n}\nlet _resolver;\n/**\n * Register the message resolver\n *\n * @param resolver - A {@link MessageResolver} function\n *\n * @VueI18nGeneral\n */\nfunction registerMessageResolver(resolver) {\n    _resolver = resolver;\n}\nlet _fallbacker;\n/**\n * Register the locale fallbacker\n *\n * @param fallbacker - A {@link LocaleFallbacker} function\n *\n * @VueI18nGeneral\n */\nfunction registerLocaleFallbacker(fallbacker) {\n    _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta =  null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = (meta) => {\n    _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = (context) => {\n    _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n    // setup options\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n    const version = isString(options.version) ? options.version : VERSION;\n    const locale = isString(options.locale) || isFunction(options.locale)\n        ? options.locale\n        : DEFAULT_LOCALE;\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n    const fallbackLocale = isArray(options.fallbackLocale) ||\n        isPlainObject(options.fallbackLocale) ||\n        isString(options.fallbackLocale) ||\n        options.fallbackLocale === false\n        ? options.fallbackLocale\n        : _locale;\n    const messages = isPlainObject(options.messages)\n        ? options.messages\n        : { [_locale]: {} };\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\n            ? options.datetimeFormats\n            : { [_locale]: {} }\n        ;\n    const numberFormats = isPlainObject(options.numberFormats)\n            ? options.numberFormats\n            : { [_locale]: {} }\n        ;\n    const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\n    const pluralRules = options.pluralRules || {};\n    const missing = isFunction(options.missing) ? options.missing : null;\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\n        ? options.missingWarn\n        : true;\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\n        ? options.fallbackWarn\n        : true;\n    const fallbackFormat = !!options.fallbackFormat;\n    const unresolving = !!options.unresolving;\n    const postTranslation = isFunction(options.postTranslation)\n        ? options.postTranslation\n        : null;\n    const processor = isPlainObject(options.processor) ? options.processor : null;\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\n        ? options.warnHtmlMessage\n        : true;\n    const escapeParameter = !!options.escapeParameter;\n    const messageCompiler = isFunction(options.messageCompiler)\n        ? options.messageCompiler\n        : _compiler;\n    if ((process.env.NODE_ENV !== 'production') &&\n        !false &&\n        !false &&\n        isFunction(options.messageCompiler)) {\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n    }\n    const messageResolver = isFunction(options.messageResolver)\n        ? options.messageResolver\n        : _resolver || resolveWithKeyValue;\n    const localeFallbacker = isFunction(options.localeFallbacker)\n        ? options.localeFallbacker\n        : _fallbacker || fallbackWithSimple;\n    const fallbackContext = isObject(options.fallbackContext)\n        ? options.fallbackContext\n        : undefined;\n    // setup internal options\n    const internalOptions = options;\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\n            ? internalOptions.__datetimeFormatters\n            : new Map()\n        ;\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\n            ? internalOptions.__numberFormatters\n            : new Map()\n        ;\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n    _cid++;\n    const context = {\n        version,\n        cid: _cid,\n        locale,\n        fallbackLocale,\n        messages,\n        modifiers,\n        pluralRules,\n        missing,\n        missingWarn,\n        fallbackWarn,\n        fallbackFormat,\n        unresolving,\n        postTranslation,\n        processor,\n        warnHtmlMessage,\n        escapeParameter,\n        messageCompiler,\n        messageResolver,\n        localeFallbacker,\n        fallbackContext,\n        onWarn,\n        __meta\n    };\n    {\n        context.datetimeFormats = datetimeFormats;\n        context.numberFormats = numberFormats;\n        context.__datetimeFormatters = __datetimeFormatters;\n        context.__numberFormatters = __numberFormatters;\n    }\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.__v_emitter =\n            internalOptions.__v_emitter != null\n                ? internalOptions.__v_emitter\n                : undefined;\n    }\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        initI18nDevTools(context, version, __meta);\n    }\n    return context;\n}\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n    return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n    const { missing, onWarn } = context;\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        const emitter = context.__v_emitter;\n        if (emitter) {\n            emitter.emit(\"missing\" /* VueDevToolsTimelineEvents.MISSING */, {\n                locale,\n                key,\n                type,\n                groupId: `${type}:${key}`\n            });\n        }\n    }\n    if (missing !== null) {\n        const ret = missing(context, locale, key, type);\n        return isString(ret) ? ret : key;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\n        }\n        return key;\n    }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n    const context = ctx;\n    context.__localeChainCache = new Map();\n    ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n    if (locale === compareLocale)\n        return false;\n    return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n    const index = locales.indexOf(targetLocale);\n    if (index === -1) {\n        return false;\n    }\n    for (let i = index + 1; i < locales.length; i++) {\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nfunction format(ast) {\n    const msg = (ctx) => formatParts(ctx, ast);\n    return msg;\n}\nfunction formatParts(ctx, ast) {\n    const body = ast.b || ast.body;\n    if ((body.t || body.type) === 1 /* NodeTypes.Plural */) {\n        const plural = body;\n        const cases = plural.c || plural.cases;\n        return ctx.plural(cases.reduce((messages, c) => [\n            ...messages,\n            formatMessageParts(ctx, c)\n        ], []));\n    }\n    else {\n        return formatMessageParts(ctx, body);\n    }\n}\nfunction formatMessageParts(ctx, node) {\n    const _static = node.s || node.static;\n    if (_static) {\n        return ctx.type === 'text'\n            ? _static\n            : ctx.normalize([_static]);\n    }\n    else {\n        const messages = (node.i || node.items).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n        return ctx.normalize(messages);\n    }\n}\nfunction formatMessagePart(ctx, node) {\n    const type = node.t || node.type;\n    switch (type) {\n        case 3 /* NodeTypes.Text */: {\n            const text = node;\n            return (text.v || text.value);\n        }\n        case 9 /* NodeTypes.Literal */: {\n            const literal = node;\n            return (literal.v || literal.value);\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            return ctx.interpolate(ctx.named(named.k || named.key));\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            return ctx.interpolate(ctx.list(list.i != null ? list.i : list.index));\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            const modifier = linked.m || linked.modifier;\n            return ctx.linked(formatMessagePart(ctx, linked.k || linked.key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n        }\n        case 7 /* NodeTypes.LinkedKey */: {\n            const linkedKey = node;\n            return (linkedKey.v || linkedKey.value);\n        }\n        case 8 /* NodeTypes.LinkedModifier */: {\n            const linkedModifier = node;\n            return (linkedModifier.v || linkedModifier.value);\n        }\n        default:\n            throw new Error(`unhandled node type on format message part: ${type}`);\n    }\n}\n\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n    if (warnHtmlMessage && detectHtmlTag(source)) {\n        warn(format$1(WARN_MESSAGE, { source }));\n    }\n}\nconst defaultOnCacheKey = (message) => message;\nlet compileCache = Object.create(null);\nfunction onCompileWarn(_warn) {\n    if (_warn.code === CompileWarnCodes.USE_MODULO_SYNTAX) {\n        warn(`The use of named interpolation with modulo syntax is deprecated. ` +\n            `It will be removed in v10.\\n` +\n            `reference: https://vue-i18n.intlify.dev/guide/essentials/syntax#rails-i18n-format \\n` +\n            `(message compiler warning message: ${_warn.message})`);\n    }\n}\nfunction clearCompileCache() {\n    compileCache = Object.create(null);\n}\nconst isMessageAST = (val) => isObject(val) &&\n    (val.t === 0 || val.type === 0) &&\n    ('b' in val || 'body' in val);\nfunction baseCompile(message, options = {}) {\n    // error detecting on compile\n    let detectError = false;\n    const onError = options.onError || defaultOnError;\n    options.onError = (err) => {\n        detectError = true;\n        onError(err);\n    };\n    // compile with mesasge-compiler\n    return { ...baseCompile$1(message, options), detectError };\n}\n/* #__NO_SIDE_EFFECTS__ */\nconst compileToFunction = (message, context) => {\n    if (!isString(message)) {\n        throw createCoreError(CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE);\n    }\n    // set onWarn\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.onWarn = onCompileWarn;\n    }\n    {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile\n        const { code, detectError } = baseCompile(message, context);\n        // evaluate function\n        const msg = new Function(`return ${code}`)();\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n};\nfunction compile(message, context) {\n    // set onWarn\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.onWarn = onCompileWarn;\n    }\n    if (((__INTLIFY_JIT_COMPILATION__ && !__INTLIFY_DROP_MESSAGE_COMPILER__)) &&\n        isString(message)) {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile with JIT mode\n        const { ast, detectError } = baseCompile(message, {\n            ...context,\n            location: (process.env.NODE_ENV !== 'production'),\n            jit: true\n        });\n        // compose message function from AST\n        const msg = format(ast);\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n            return (() => message);\n        }\n        // AST case (passed from bundler)\n        const cacheKey = message.cacheKey;\n        if (cacheKey) {\n            const cached = compileCache[cacheKey];\n            if (cached) {\n                return cached;\n            }\n            // compose message function from message (AST)\n            return (compileCache[cacheKey] =\n                format(message));\n        }\n        else {\n            return format(message);\n        }\n    }\n}\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = (val) => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\n    const [key, options] = parseTranslateArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const escapeParameter = isBoolean(options.escapeParameter)\n        ? options.escapeParameter\n        : context.escapeParameter;\n    const resolvedMessage = !!options.resolvedMessage;\n    // prettier-ignore\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n        ? !isBoolean(options.default)\n            ? options.default\n            : (!messageCompiler ? () => key : key)\n        : fallbackFormat // default by `fallbackFormat` option\n            ? (!messageCompiler ? () => key : key)\n            : '';\n    const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\n    const locale = getLocale(context, options);\n    // escape params\n    escapeParameter && escapeParams(options);\n    // resolve message format\n    // eslint-disable-next-line prefer-const\n    let [formatScope, targetLocale, message] = !resolvedMessage\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\n        : [\n            key,\n            locale,\n            messages[locale] || {}\n        ];\n    // NOTE:\n    //  Fix to work around `ssrTransfrom` bug in Vite.\n    //  https://github.com/vitejs/vite/issues/4306\n    //  To get around this, use temporary variables.\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n    let format = formatScope;\n    // if you use default message, set it as message format!\n    let cacheBaseKey = key;\n    if (!resolvedMessage &&\n        !(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format))) {\n        if (enableDefaultMsg) {\n            format = defaultMsgOrKey;\n            cacheBaseKey = format;\n        }\n    }\n    // checking message format and target locale\n    if (!resolvedMessage &&\n        (!(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format)) ||\n            !isString(targetLocale))) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    // TODO: refactor\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\n        warn(`The message format compilation is not supported in this build. ` +\n            `Because message compiler isn't included. ` +\n            `You need to pre-compilation all message format. ` +\n            `So translate function return '${key}'.`);\n        return key;\n    }\n    // setup compile error detecting\n    let occurred = false;\n    const onError = () => {\n        occurred = true;\n    };\n    // compile message format\n    const msg = !isMessageFunction(format)\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\n        : format;\n    // if occurred compile error, return the message format\n    if (occurred) {\n        return format;\n    }\n    // evaluate message with context\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n    const msgContext = createMessageContext(ctxOptions);\n    const messaged = evaluateMessage(context, msg, msgContext);\n    // if use post translation option, proceed it with handler\n    const ret = postTranslation\n        ? postTranslation(messaged, key)\n        : messaged;\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        // prettier-ignore\n        const payloads = {\n            timestamp: Date.now(),\n            key: isString(key)\n                ? key\n                : isMessageFunction(format)\n                    ? format.key\n                    : '',\n            locale: targetLocale || (isMessageFunction(format)\n                ? format.locale\n                : ''),\n            format: isString(format)\n                ? format\n                : isMessageFunction(format)\n                    ? format.source\n                    : '',\n            message: ret\n        };\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n        translateDevTools(payloads);\n    }\n    return ret;\n}\nfunction escapeParams(options) {\n    if (isArray(options.list)) {\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n    }\n    else if (isObject(options.named)) {\n        Object.keys(options.named).forEach(key => {\n            if (isString(options.named[key])) {\n                options.named[key] = escapeHtml(options.named[key]);\n            }\n        });\n    }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n    let message = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'translate';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            !isAlmostSameLocale(locale, targetLocale) &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        message =\n            messages[targetLocale] || {};\n        // for vue-devtools timeline event\n        let start = null;\n        let startTag;\n        let endTag;\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            start = window.performance.now();\n            startTag = 'intlify-message-resolve-start';\n            endTag = 'intlify-message-resolve-end';\n            mark && mark(startTag);\n        }\n        if ((format = resolveValue(message, key)) === null) {\n            // if null, resolve with object key path\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            const end = window.performance.now();\n            const emitter = context.__v_emitter;\n            if (emitter && start && format) {\n                emitter.emit(\"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */, {\n                    type: \"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */,\n                    key,\n                    message: format,\n                    time: end - start,\n                    groupId: `${type}:${key}`\n                });\n            }\n            if (startTag && endTag && mark && measure) {\n                mark(endTag);\n                measure('intlify message resolve', startTag, endTag);\n            }\n        }\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n            break;\n        }\n        if (!isImplicitFallback(targetLocale, locales)) {\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n            key, targetLocale, missingWarn, type);\n            if (missingRet !== key) {\n                format = missingRet;\n            }\n        }\n        from = to;\n    }\n    return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n    const { messageCompiler, warnHtmlMessage } = context;\n    if (isMessageFunction(format)) {\n        const msg = format;\n        msg.locale = msg.locale || targetLocale;\n        msg.key = msg.key || key;\n        return msg;\n    }\n    if (messageCompiler == null) {\n        const msg = (() => format);\n        msg.locale = targetLocale;\n        msg.key = key;\n        return msg;\n    }\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-compilation-start';\n        endTag = 'intlify-message-compilation-end';\n        mark && mark(startTag);\n    }\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit(\"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */, {\n                type: \"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */,\n                message: format,\n                time: end - start,\n                groupId: `${'translate'}:${key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message compilation', startTag, endTag);\n        }\n    }\n    msg.locale = targetLocale;\n    msg.key = key;\n    msg.source = format;\n    return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-evaluation-start';\n        endTag = 'intlify-message-evaluation-end';\n        mark && mark(startTag);\n    }\n    const messaged = msg(msgCtx);\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit(\"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */, {\n                type: \"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */,\n                value: messaged,\n                time: end - start,\n                groupId: `${'translate'}:${msg.key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message evaluation', startTag, endTag);\n        }\n    }\n    return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n    const [arg1, arg2, arg3] = args;\n    const options = {};\n    if (!isString(arg1) &&\n        !isNumber(arg1) &&\n        !isMessageFunction(arg1) &&\n        !isMessageAST(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    // prettier-ignore\n    const key = isNumber(arg1)\n        ? String(arg1)\n        : isMessageFunction(arg1)\n            ? arg1\n            : arg1;\n    if (isNumber(arg2)) {\n        options.plural = arg2;\n    }\n    else if (isString(arg2)) {\n        options.default = arg2;\n    }\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n        options.named = arg2;\n    }\n    else if (isArray(arg2)) {\n        options.list = arg2;\n    }\n    if (isNumber(arg3)) {\n        options.plural = arg3;\n    }\n    else if (isString(arg3)) {\n        options.default = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        assign(options, arg3);\n    }\n    return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n    return {\n        locale,\n        key,\n        warnHtmlMessage,\n        onError: (err) => {\n            onError && onError(err);\n            if ((process.env.NODE_ENV !== 'production')) {\n                const _source = getSourceForCodeFrame(source);\n                const message = `Message compilation error: ${err.message}`;\n                const codeFrame = err.location &&\n                    _source &&\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n                const emitter = context.__v_emitter;\n                if (emitter && _source) {\n                    emitter.emit(\"compile-error\" /* VueDevToolsTimelineEvents.COMPILE_ERROR */, {\n                        message: _source,\n                        error: err.message,\n                        start: err.location && err.location.start.offset,\n                        end: err.location && err.location.end.offset,\n                        groupId: `${'translate'}:${key}`\n                    });\n                }\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n            }\n            else {\n                throw err;\n            }\n        },\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\n    };\n}\nfunction getSourceForCodeFrame(source) {\n    if (isString(source)) {\n        return source;\n    }\n    else {\n        if (source.loc && source.loc.source) {\n            return source.loc.source;\n        }\n    }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\n    const resolveMessage = (key) => {\n        let val = resolveValue(message, key);\n        // fallback to root context\n        if (val == null && fallbackContext) {\n            const [, , message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\n            val = resolveValue(message, key);\n        }\n        if (isString(val) || isMessageAST(val)) {\n            let occurred = false;\n            const onError = () => {\n                occurred = true;\n            };\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\n            return !occurred\n                ? msg\n                : NOOP_MESSAGE_FUNCTION;\n        }\n        else if (isMessageFunction(val)) {\n            return val;\n        }\n        else {\n            // TODO: should be implemented warning message\n            return NOOP_MESSAGE_FUNCTION;\n        }\n    };\n    const ctxOptions = {\n        locale,\n        modifiers,\n        pluralRules,\n        messages: resolveMessage\n    };\n    if (context.processor) {\n        ctxOptions.processor = context.processor;\n    }\n    if (options.list) {\n        ctxOptions.list = options.list;\n    }\n    if (options.named) {\n        ctxOptions.named = options.named;\n    }\n    if (isNumber(options.plural)) {\n        ctxOptions.pluralIndex = options.plural;\n    }\n    return ctxOptions;\n}\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __datetimeFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let datetimeFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'datetime format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        datetimeFormat =\n            datetimeFormats[targetLocale] || {};\n        format = datetimeFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __datetimeFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n        __datetimeFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'formatMatcher',\n    'hour12',\n    'timeZone',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    'dayPeriod',\n    'numberingSystem',\n    'hourCycle',\n    'fractionalSecondDigits'\n];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = {};\n    let overrides = {};\n    let value;\n    if (isString(arg1)) {\n        // Only allow ISO strings - other date formats are often supported,\n        // but may cause different results in different browsers.\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n        if (!matches) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n        // Some browsers can not parse the iso datetime separated by space,\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\n        const dateTime = matches[3]\n            ? matches[3].trim().startsWith('T')\n                ? `${matches[1].trim()}${matches[3].trim()}`\n                : `${matches[1].trim()}T${matches[3].trim()}`\n            : matches[1].trim();\n        value = new Date(dateTime);\n        try {\n            // This will fail if the date is not valid\n            value.toISOString();\n        }\n        catch (e) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n    }\n    else if (isDate(arg1)) {\n        if (isNaN(arg1.getTime())) {\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n        }\n        value = arg1;\n    }\n    else if (isNumber(arg1)) {\n        value = arg1;\n    }\n    else {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__datetimeFormatters.has(id)) {\n            continue;\n        }\n        context.__datetimeFormatters.delete(id);\n    }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __numberFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseNumberArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.NumberFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let numberFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'number format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        numberFormat =\n            numberFormats[targetLocale] || {};\n        format = numberFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __numberFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n        __numberFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'currencySign',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    'compactDisplay',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'roundingMode',\n    'roundingPriority',\n    'roundingIncrement',\n    'trailingZeroDisplay'\n];\n/** @internal */\nfunction parseNumberArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = {};\n    let overrides = {};\n    if (!isNumber(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    const value = arg1;\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__numberFormatters.has(id)) {\n            continue;\n        }\n        context.__numberFormatters.delete(id);\n    }\n}\n\n{\n    initFeatureFlags();\n}\n\nexport { CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\n"],"names":["inBrowser","window","makeSymbol","name","shareable","Symbol","for","generateFormatCacheKey","locale","key","source","friendlyJSONstringify","l","k","s","json","JSON","stringify","replace","isNumber","val","isFinite","isDate","toTypeString","isRegExp","isEmptyObject","isPlainObject","Object","keys","length","assign","_globalThis","getGlobalThis","globalThis","self","global","escapeHtml","rawText","hasOwnProperty","prototype","hasOwn","obj","call","isArray","Array","isFunction","isString","isBoolean","isObject","isPromise","then","catch","objectToString","toString","value","proto","getPrototypeOf","constructor","incrementer","code","current","warn","msg","err","console","stack","isNotObjectOrIsArray","deepCopy","src","des","Error","pop","forEach","des2","push","createLocation","start","end","RE_ARGS","format","message","args","match","identifier","join","items","separator","reduce","str","item","index","CompileWarnCodes","USE_MODULO_SYNTAX","__EXTEND_POINT__","warnMessages","CompileErrorCodes","EXPECTED_TOKEN","INVALID_TOKEN_IN_PLACEHOLDER","UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER","UNKNOWN_ESCAPE_SEQUENCE","INVALID_UNICODE_ESCAPE_SEQUENCE","UNBALANCED_CLOSING_BRACE","UNTERMINATED_CLOSING_BRACE","EMPTY_PLACEHOLDER","NOT_ALLOW_NEST_PLACEHOLDER","INVALID_LINKED_FORMAT","MUST_HAVE_MESSAGES_IN_PLURAL","UNEXPECTED_EMPTY_LINKED_MODIFIER","UNEXPECTED_EMPTY_LINKED_KEY","UNEXPECTED_LEXICAL_ANALYSIS","UNHANDLED_CODEGEN_NODE_TYPE","UNHANDLED_MINIFIER_NODE_TYPE","errorMessages","createCompileError","loc","options","domain","messages","error","SyntaxError","String","location","defaultOnError","CHAR_SP","CHAR_CR","CHAR_LF","CHAR_LS","fromCharCode","CHAR_PS","createScanner","_buf","_index","_line","_column","_peekOffset","isCRLF","isPS","isLS","isLineEnd","isLF","charAt","offset","next","line","column","peekOffset","currentChar","currentPeek","peek","reset","resetPeek","skipToPeek","target","EOF","LITERAL_DELIMITER","ERROR_DOMAIN$3","createTokenizer","_scnr","currentOffset","currentPosition","createPosition","_initLoc","_initOffset","_context","currentType","startLoc","endLoc","lastType","lastOffset","lastStartLoc","lastEndLoc","braceNest","inLinked","text","context","onError","emitError","pos","ctx","getToken","type","token","getEndToken","eat","scnr","ch","peekSpaces","buf","skipSpaces","isIdentifierStart","cc","charCodeAt","isListIdentifierStart","ret","isNumberStart","isPluralStart","isTextStart","fn","hasSpace","prev","detectModulo","takeChar","isIdentifier","takeIdentifierChar","isNamedIdentifier","takeNamedIdentifierChar","isDigit","takeDigit","isHexDigit","takeHexDigit","getDigits","num","readText","isLiteral","readEscapeSequence","readUnicodeEscapeSequence","unicode","digits","sequence","i","isInvalidIdentifier","readPlural","plural","readTokenInPlaceholder","readTokenInLinked","validNamedIdentifier","validListIdentifier","validLiteral","readToken","isNamedIdentifierStart","readNamedIdentifier","readListIdentifier","isLiteralStart","literal","readLiteral","identifiers","readInvalidIdentifier","isLinkedDotStart","isLinkedDelimiterStart","isLinkedModifierStart","readLinkedModifier","isLinkedReferStart","readLinkedRefer","isModulo","spaces","detectModuloStart","readModulo","nextToken","ERROR_DOMAIN$2","KNOWN_ESCAPES","fromEscapeSequence","codePoint4","codePoint6","codePoint","parseInt","fromCodePoint","createParser","onWarn","tokenzer","emitWarn","createCompileWarn","startNode","node","endNode","parseText","tokenizer","parseList","parseNamed","modulo","parseLiteral","parseLinked","linkedNode","parsed","nextConsumeToken","getTokenCaption","parseLinkedModifier","modifier","parseLinkedKey","nextContext","emptyLinkedKeyNode","parseMessage","parseResource","msgNode","hasEmptyMessage","cases","parsePlural","parse","body","onCacheKey","cacheKey","slice","traverseNodes","nodes","transformer","traverseNode","helper","transform","ast","helpers","Set","add","createTransformer","from","optimizeMessageNode","static","values","ERROR_DOMAIN$1","minify","t","resource","b","c","valueNode","v","linked","m","list","named","ERROR_DOMAIN","generateNode","generator","generateResource","needIndent","indent","deindent","generatePluralNode","generateMessageNode","generateLinkedNode","generate","mode","filename","sourceMap","breakLineCode","_needIndent","map","indentLevel","_newline","n","withBreakLine","_breakLineCode","repeat","withNewLine","level","newline","createCodeGenerator","toJSON","baseCompile","assignedOptions","jit","enalbeMinify","enambeOptimize","optimize","pathStateMachine","w","o","literalValueRE","getPathCharType","formatSubPath","path","trimmed","trim","isNaN","exp","test","a","stripQuotes","cache","Map","resolveWithKeyValue","resolveValue","hit","get","newChar","transition","action","typeMap","subPathDepth","actions","maybeUnescapeQuote","nextChar","set","len","last","DEFAULT_MODIFIER","DEFAULT_MESSAGE","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","Math","abs","min","createMessageContext","pluralIndex","count","getPluralIndex","pluralRule","pluralRules","orgPluralRule","_list","_named","props","normalizeNamed","parent","normalize","processor","interpolate","arg1","arg2","modifiers","devtools","setDevToolsHook","hook","translateDevTools","createDevToolsHook","payloads","emit","code$1","inc$1","CoreWarnCodes","NOT_FOUND_KEY","FALLBACK_TO_TRANSLATE","CANNOT_FORMAT_NUMBER","FALLBACK_TO_NUMBER_FORMAT","CANNOT_FORMAT_DATE","FALLBACK_TO_DATE_FORMAT","EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER","inc","CoreErrorCodes","INVALID_ARGUMENT","INVALID_DATE_ARGUMENT","INVALID_ISO_DATE_ARGUMENT","NOT_SUPPORT_NON_STRING_MESSAGE","NOT_SUPPORT_LOCALE_PROMISE_VALUE","NOT_SUPPORT_LOCALE_ASYNC_FUNCTION","NOT_SUPPORT_LOCALE_TYPE","createCoreError","getLocale","resolveLocale","_resolveLocale","resolvedOnce","resolve","fallbackWithSimple","fallback","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","__localeChainCache","chain","block","appendBlockToChain","defaults","blocks","follow","appendLocaleToChain","tokens","split","appendItemToChain","splice","includes","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","toLocaleUpperCase","substr","_compiler","_resolver","_fallbacker","registerMessageCompiler","compiler","registerMessageResolver","resolver","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","meta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","version","_locale","fallbackLocale","datetimeFormats","numberFormats","upper","toUpperCase","children","lower","toLowerCase","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","warnHtmlMessage","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","internalOptions","__datetimeFormatters","__numberFormatters","__meta","cid","__INTLIFY_PROD_DEVTOOLS__","i18n","timestamp","Date","now","initI18nDevTools","handleMissing","updateFallbackLocale","isImplicitFallback","targetLocale","locales","indexOf","compareLocale","formatMessageParts","formatParts","_static","acm","formatMessagePart","linkedKey","linkedModifier","defaultOnCacheKey","compileCache","create","isMessageAST","detectError","baseCompile$1","compileToFunction","cached","Function","compile","__INTLIFY_JIT_COMPILATION__","__INTLIFY_DROP_MESSAGE_COMPILER__","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","escapeParams","formatScope","resolveMessageFormat","cacheBaseKey","format2","occurred","compileMessageFormat","ctxOptions","resolveMessage","getMessageContextOptions","messaged","msgCtx","evaluateMessage","missingRet","msg2","getCompileContext","arg3","datetime","overrides","parseDateTimeArgs","part","Intl","DateTimeFormat","datetimeFormat","id","formatter","formatToParts","DATETIME_FORMAT_OPTIONS_KEYS","arg4","matches","dateTime","startsWith","toISOString","e","getTime","clearDateTimeFormat","has","delete","number","parseNumberArgs","NumberFormat","numberFormat","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat"],"mappings":"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","x_google_ignoreList":[0,1,2]}